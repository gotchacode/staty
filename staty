#! /usr/bin/env python

import twitter
import sys,time
import os.path
import ConfigParser
from subprocess import *
import webbrowser
from clint.textui import colored

URL = 'http://dev.twitter.com'
new = 2
Usage = """
First copy the script staty to /usr/bin directory and
Use
$ staty [options]
"""

description = """
Staty is a full fledged twitter client


       -------------------------------------------------------
      ____   _________        __          __________
     /  __| |___  ____|      // \\       |___  _____| \\     //
    /  /        | |         //__ \\          | |       \\   //
    \  \__      | |        //____ \\         | |        \\_//
     \__  \     | |       //       \\        | |         | |
      __/ /     | |      //         \\       | |         | |
     |___/      |_|     //           \\      |_|         |_|

   =============================================================
   Tweets options:

   tweet
   friends
   system
   msg
   followers
   vc
   replies
   feed
   quote

"""

check = os.path.isfile(os.path.expanduser('~/.staty.conf'))
if cmp(check,False) == 0:
    print colored.magenta("Opening your browser, Register a new app,and note all keys. Once done,run the ./install.sh and check again!")
    sleep(2)
    webbrowser.open(URL,new=new)
    sys.exit(2)


config = ConfigParser.ConfigParser()
config.read(os.path.expanduser('~/.staty.conf'))
conskey = config.get("STATY","consumer_key",raw=True)
conssec = config.get("STATY","consumer_secret",raw=True)
accstkn = config.get("STATY","access_token",raw=True)
accssec = config.get("STATY","access_token_secret",raw=True)

api = twitter.Api(consumer_key=conskey,consumer_secret=conssec,access_token_key=accstkn,access_token_secret=accssec)

if len(sys.argv) == 1:
	print colored.blue(description)
	print '\n'
	print colored.white(Usage)
	sys.exit(2)

if (cmp(sys.argv[1],'-h') or cmp(sys.argv[1],'--help')) == 0:
	print colored.white(Usage)
	sys.exit(2)

if cmp(sys.argv[1],"friends") == 0:
        users = api.GetFriends()
        print colored.cyan("\n".join([u.name for u in users]))

if cmp(sys.argv[1],"msg") == 0:
        msg = api.GetDirectMessages()
        print colored.white("\n".join([u.text for u in msg]))

if cmp(sys.argv[1],"followers") == 0:
        followers = api.GetFollowers()
        print colored.white("\n".join([u.name for u in followers]))

if cmp(sys.argv[1],"vc") == 0:
        vc = api.VerifyCredentials()
        print colored.green(vc)

if cmp(sys.argv[1],"replies") == 0:
        reply = api.GetReplies()
        print colored.white("\n".join([u.text for u in reply]))

if cmp(sys.argv[1],"update") == 0 or cmp(sys.argv[1],"tweet") == 0:
	status=' '.join(sys.argv[2:])
	if len(status) < 140:
		api.PostUpdates(status)
		print colred.green("Status Is Updated Successfully!")
	else:
		print colred.white("Your status is of "+str(len(status))+"chars.Twitter doesn't allow more than 140 chars")

if cmp(sys.argv[1],"feed") == 0 and len(sys.argv) == 4:

	feeds=api.GetUserTimeline(sys.argv[2],count=sys.argv[3])
    	print colored.cyan("\n".join([feed.text for feed in feeds]))

if cmp(sys.argv[1],"search") == 0:
	search = api.GetSearch(' '.join(sys.argv[2:]))
	print colored.white("\n".join([getattr(s.user,"screen_name")+":"+" "+getattr(s,"text") for s in search]))


if cmp(sys.argv[1],"system") == 0:
    stuff = Popen(["./sysinfo.sh"],stdout=PIPE)
    link = Popen(["pastebinit"],stdin=stuff.stdout,stdout=PIPE)
    status = link.communicate()[0]
    print colored.green("Umm... You system stats are being tweeted in a while...!")
    api.PostUpdates(status)

if cmp(sys.argv[1],"quote") == 0:
    status = Popen(["./quote.sh"],stdout=PIPE).communicate()[0]
    api.PostUpdates(status)
    print colored.white("The QuoteBot Strikes again!")



